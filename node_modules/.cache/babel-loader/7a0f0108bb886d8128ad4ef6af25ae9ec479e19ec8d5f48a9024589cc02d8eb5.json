{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItems = state.items.find(item => item.id === newItem.id);\n    },\n    removeItem() {}\n  }\n});\nexport const productSliceReducer = productSlice.reducer;\nexport const {\n  addItemToCart,\n  removeItem\n} = productSlice.actions;","map":{"version":3,"names":["createSlice","productSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItems","find","item","id","removeItem","productSliceReducer","reducer","actions"],"sources":["/Users/dhavalkumarpatel/Desktop/AdvanceRedux/src/Store/productSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: { items: [], totalQuantity: 0 },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItems = state.items.find((item) => item.id === newItem.id);\n    },\n    removeItem() {},\n  },\n});\n\nexport const productSliceReducer = productSlice.reducer;\n\nexport const { addItemToCart, removeItem } = productSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,aAAa,EAAE;EAAE,CAAC;EAC7CC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,aAAa,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IAC1E,CAAC;IACDC,UAAUA,CAAA,EAAG,CAAC;EAChB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAGhB,YAAY,CAACiB,OAAO;AAEvD,OAAO,MAAM;EAAEX,aAAa;EAAES;AAAW,CAAC,GAAGf,YAAY,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}