{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    isShown: false,\n    notification: null\n  },\n  reducers: {\n    toggle(state, action) {\n      state.isShown = !state.isShown;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        state: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      };\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending Cart Data\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://foodorderhttps-default-rtdb.firebaseio.com/ct.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Something wrong while sending the Data!\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(showNotification({\n        title: \"success\",\n        message: \"sent cart data\",\n        status: \"success!\"\n      }));\n    } catch (error) {\n      dispatch(showNotification({\n        title: \"error!\",\n        message: \"Sending Cart Data failed\",\n        status: \"error\"\n      }));\n    }\n  };\n};\nexport const cartReducer = cartSlice.reducer;\nexport const {\n  toggle,\n  showNotification\n} = cartSlice.actions;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","isShown","notification","reducers","toggle","state","action","showNotification","payload","status","title","message","sendCartData","cart","dispatch","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartReducer","reducer","actions"],"sources":["/Users/dhavalkumarpatel/Desktop/AdvanceRedux/src/Store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { isShown: false, notification: null },\n  reducers: {\n    toggle(state, action) {\n      state.isShown = !state.isShown;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        state: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending Cart Data\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://foodorderhttps-default-rtdb.firebaseio.com/ct.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Something wrong while sending the Data!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        showNotification({\n          title: \"success\",\n          message: \"sent cart data\",\n          status: \"success!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        showNotification({\n          title: \"error!\",\n          message: \"Sending Cart Data failed\",\n          status: \"error\",\n        })\n      );\n    }\n  };\n};\nexport const cartReducer = cartSlice.reducer;\n\nexport const { toggle, showNotification } = cartSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,OAAO,EAAE,KAAK;IAAEC,YAAY,EAAE;EAAK,CAAC;EACpDC,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACJ,OAAO,GAAG,CAACI,KAAK,CAACJ,OAAO;IAChC,CAAC;IACDM,gBAAgBA,CAACF,KAAK,EAAEC,MAAM,EAAE;MAC9BD,KAAK,CAACH,YAAY,GAAG;QACnBG,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC,MAAM;QAC5BC,KAAK,EAAEJ,MAAM,CAACE,OAAO,CAACE,KAAK;QAC3BC,OAAO,EAAEL,MAAM,CAACE,OAAO,CAACG;MAC1B,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNP,gBAAgB,CAAC;MACfE,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAA4D,EAC5D;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CAAC,CACF;MACD,IAAI,CAACG,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;MAC5D;IACF,CAAC;IAED,IAAI;MACF,MAAMR,WAAW,EAAE;MACnBD,QAAQ,CACNP,gBAAgB,CAAC;QACfG,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE,gBAAgB;QACzBF,MAAM,EAAE;MACV,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdV,QAAQ,CACNP,gBAAgB,CAAC;QACfG,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE,0BAA0B;QACnCF,MAAM,EAAE;MACV,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMgB,WAAW,GAAG3B,SAAS,CAAC4B,OAAO;AAE5C,OAAO,MAAM;EAAEtB,MAAM;EAAEG;AAAiB,CAAC,GAAGT,SAAS,CAAC6B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}